[versions]
# platforms
kotlin-core = "2.0.20"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
kotlin-runtime = "4.0.0"

# plugins
shadow = "8.3.3"
indra = "3.1.3"
toxopid = "4.1.0"
spotless = "6.25.0"
ksr = "1.0.0"
dokka = "1.9.20"

# utilities
slf4md = "1.0.1"
slf4j = "2.0.16"
hoplite = "2.8.2"
okhttp = "4.12.0"

# testing
junit = "5.11.2"

[libraries]
# runtime
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# utilities
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# testing
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

[plugins]
indra-common = { id = "net.kyori.indra", version.ref = "indra" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
indra-publishing = { id = "net.kyori.indra.publishing", version.ref = "indra" }
indra-git = { id = "net.kyori.indra.git", version.ref = "indra" }
toxopid = { id = "com.xpdustry.toxopid", version.ref = "toxopid" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-core" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-core" }
ksr = { id = "com.xpdustry.ksr", version.ref = "ksr" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
